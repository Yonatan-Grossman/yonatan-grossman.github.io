---
title: "ArcGIS"
format: html
---

## In class

I started learning what GIS was how to use the software earlier this year, and have since taken two of the classes offered at UCSB with the intention to take two more next year. I've really enjoyed getting to toy with spatial data and have even used the skills I developed to work on my own projects.

For my final project in one of my classes I was placed in a group with 3 other people and we were supposed to come up with our own project and then collect data and try to figure it out. My group decided to try to address the feasibility of re-introducing grizzly bears to California.

We collected data from various online sources, uploaded them to arcGIS online, and then worked together to create this storymap.

<iframe src="https://storymaps.arcgis.com/stories/5faf705556174a63a4c84a16f78f1bb6" width="100%" height="800" frameborder="0" allowfullscreen>

</iframe>

## Outside class

I've really enjoyed learning about and using GIS software, and have used it in some of my own projects as well. I am currently working on a project on my own that compares the distribution of various religions in central and south Asia, specifically the Indian subcontinent. Although the project itself is incomplete, I still have a lot of the data downloaded and ready. This is a graph of the data I gathered from a 2011 Indian Census about religious population by region.

```{r}
library(tidyverse)
library(janitor)
```

```{r}
religion <- read.csv("data/religion_data.csv") |> 
  clean_names() |> 
  select(where(~ any(!is.na(.x)))) #read in the data then clean it. Also removes columns with n/a values

religion <- religion[1:35, ] #only keeps the first 35 rows (since the rest were n/a values)

religion <- religion |> 
  select(-c("x_63", "x_67", "x_70", "x_73", "code", "total")) #getting rid of some extra columns not useful to this graoph
  
religion <-religion |> 
  rename(other =
           other_religions_and_persuasions_incl_unclassified_sect,
         "not stated" = religion_not_stated,
         State = area_name) |> #rename the longer column names to something easier/more accurate
  pivot_longer( cols = -State,
                names_to = "Religion",
                values_to = "Population") #pivot the data to long format so there's only three columns

top_religions <- c("hindu", "muslim", "christian", "sikh") #new variable of the 4 most populous religions

religion <- religion |>
  mutate(
    Religion = fct_other(Religion,
                         keep = top_religions,
                         other_level = "other")) |> #drops all religions that aren't in the top religions and puts them in an "other" catagory (this turns them into levels)
  group_by(State,
           Religion) |>     
  summarise(Population = sum(Population,
                             na.rm = TRUE),
            .groups = "drop") #sum the values of the dropped religions into an other level

religion$Religion <- factor(religion$Religion, levels=c('hindu', 'muslim', 'christian', 'sikh', 'other')) #defines levels to control the order the religions are displayed

ggplot(religion, #data
       aes(x = State, 
           y = Population,
           fill = Religion)) + #axis definition + allows the fill color to be chosed by the religion
  geom_bar(position = "fill", stat = "identity") + #make a stacked bar graph
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 7)) + #tilt the x-axis labels and makes them smaller so it's easier to read
  labs(title = "Religion in Indian States by Percent of Population",
       subtitle = "Yonatan Grossman",
       caption = "Data from:  http://censusindia.gov.in") + #adds title, subtitle, and caption
  ylab("Population Percent") + #edits the y-axis label
  scale_fill_manual(values = c("#F4C430","#219909", "white","#003688","red")) #chooses colors (I tried to choose ones that were significant to the religions and also contrasted well)
```
